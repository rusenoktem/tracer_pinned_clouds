load ../Data/yearlong_pccp.mat
% yearlong_pccp.mat was formed from the histogram data generated by
% collect_yearlong_pccp.py, which was executed in ARM jupyterhub.
% yearlong_pccp.mat includes count of cloud points distributed over 
% time and height in 4 cells that correspond to months 10-12, 1-3,4-6, 7-9

close all;
figure('Position',[0 0 800 500]);
sbpos = [0.1 0.52;0.55 0.52;0.1 0.1; 0.55 0.1 ];
titletxt = ['OND';'JFM';'AMJ';'JAS'];
%days_camera_on is manually generated by discarding the days when cameras did not work
%It is possible that the cameras worked but no pccp were generated becuase
%there were no low clouds observed. Those days are not discarded.
days_camera_on = [29 27 26 30 31 29 30 31 29+14 31 30 21];

w_cam_on = [sum(days_camera_on(10:12)) sum(days_camera_on(1:3))...
    sum(days_camera_on(4:6)) sum(days_camera_on(7:9))];
xlb = [false false true true];
ylb = [true false true false];

for s = 1:4, %seasons in the order of OND, JFM, AMJ, JAS 
    data = pccp{s}.data; %current season
    
    %Weigh 19th column (time slot 19-20 UTC) to compensate for missing pccp 
    %during June-July. This is different from days_camera_on.
    %This time slot is missing as of June 2025 due to an error in calculating 
    %solar angle and will later be processed by ARM
    
    if (s==3) %AMJ
        data(:,19) = data(:,19)*1.84;
    elseif (s==4) %JAS
        data(:,19) = data(:,19)*1.22;
    end
    
    set(subplot(2,2,s), 'Position', [sbpos(s,:) 0.30 .3]);
    
    %normalize with the number of days cameras were working (w_cam_on) 
    cb = overlay(data*10/w_cam_on(s),xlb(s), ylb(s),titletxt(s,:));
    cb.Position = [sbpos(s,1)+0.31 sbpos(s,2) 0.02 0.3]; %colorbar position
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%subroutines

function cb = overlay(data, xlb, ylb, titletxt)
  %define the color space
  c_N = 19;
  c = jet(30);
  cspace = [1 1 1;c(13:-1:12,:);c(14:end,:)];

  xb = 0:24; %time bins
  yb = [0:100:13000]; %height bins
  
  data = data(1:30,15:end); % keep first 3 km and starting from 9 LT
                            % discard 0-13 UTC (before 9 LT, mostly dark hours)
  [I, J] =find(data >-1 );
  ii = find(data>-1);
  mxv = max(data(:)); %for colormap scaling
  c = round(data(ii)*c_N/mxv)+1;

  for yy = 0:0.05:0.1 %setting plotting resolution
      for xx = 0:0.1:1
        scatter(xb(J)+9+xx,yb(I)/1e3+yy,11,cspace(c,:),'filled','square'); hold on
      end
  end
  
  cb=colorbar('Ticks',[0:3]/3,'TickLabels',{num2str(round(([0:3]/3)'*mxv/10000)*10)});
  cb.Label.String = 'x10^3 [h^{-1} km^{-1}]';
  colormap(cspace);
  axis([8.9 20 -.1 3])
  if (xlb)
    xlabel('time [LT]')
  end
  if (ylb)
      ylabel('height [km]')
  end
  
  set(gca,'FontSize',10) 
  title(titletxt)
end

